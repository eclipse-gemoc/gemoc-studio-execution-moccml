/*
 * generated by Xtext
 */
grammar InternalTestScenarioLang;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.gemoc.execution.moccml.testscenariolang.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.gemoc.execution.moccml.testscenariolang.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.gemoc.execution.moccml.testscenariolang.xtext.services.TestScenarioLangGrammarAccess;

}

@parser::members {
 
 	private TestScenarioLangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TestScenarioLangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleScenario
entryRuleScenario 
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScenarioAccess().getGroup()); }
(rule__Scenario__Group__0)
{ after(grammarAccess.getScenarioAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportStatement
entryRuleImportStatement 
:
{ before(grammarAccess.getImportStatementRule()); }
	 ruleImportStatement
{ after(grammarAccess.getImportStatementRule()); } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportStatementAccess().getGroup()); }
(rule__ImportStatement__Group__0)
{ after(grammarAccess.getImportStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportJavaStatement
entryRuleImportJavaStatement 
:
{ before(grammarAccess.getImportJavaStatementRule()); }
	 ruleImportJavaStatement
{ after(grammarAccess.getImportJavaStatementRule()); } 
	 EOF 
;

// Rule ImportJavaStatement
ruleImportJavaStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportJavaStatementAccess().getGroup()); }
(rule__ImportJavaStatement__Group__0)
{ after(grammarAccess.getImportJavaStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectVariable
entryRuleObjectVariable 
:
{ before(grammarAccess.getObjectVariableRule()); }
	 ruleObjectVariable
{ after(grammarAccess.getObjectVariableRule()); } 
	 EOF 
;

// Rule ObjectVariable
ruleObjectVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectVariableAccess().getGroup()); }
(rule__ObjectVariable__Group__0)
{ after(grammarAccess.getObjectVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard 
:
{ before(grammarAccess.getQualifiedNameWithWildCardRule()); }
	 ruleQualifiedNameWithWildCard
{ after(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
(rule__QualifiedNameWithWildCard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference 
:
{ before(grammarAccess.getJvmTypeReferenceRule()); }
	 ruleJvmTypeReference
{ after(grammarAccess.getJvmTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup()); }
(rule__JvmTypeReference__Group__0)
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMseStatement
entryRuleMseStatement 
:
{ before(grammarAccess.getMseStatementRule()); }
	 ruleMseStatement
{ after(grammarAccess.getMseStatementRule()); } 
	 EOF 
;

// Rule MseStatement
ruleMseStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMseStatementAccess().getGroup()); }
(rule__MseStatement__Group__0)
{ after(grammarAccess.getMseStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRewritingRuleCallStatement
entryRuleRewritingRuleCallStatement 
:
{ before(grammarAccess.getRewritingRuleCallStatementRule()); }
	 ruleRewritingRuleCallStatement
{ after(grammarAccess.getRewritingRuleCallStatementRule()); } 
	 EOF 
;

// Rule RewritingRuleCallStatement
ruleRewritingRuleCallStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getGroup()); }
(rule__RewritingRuleCallStatement__Group__0)
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEObjectRef
entryRuleEObjectRef 
:
{ before(grammarAccess.getEObjectRefRule()); }
	 ruleEObjectRef
{ after(grammarAccess.getEObjectRefRule()); } 
	 EOF 
;

// Rule EObjectRef
ruleEObjectRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEObjectRefAccess().getObjectAssignment()); }
(rule__EObjectRef__ObjectAssignment)
{ after(grammarAccess.getEObjectRefAccess().getObjectAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral 
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerLiteralAccess().getValueAssignment()); }
(rule__IntegerLiteral__ValueAssignment)
{ after(grammarAccess.getIntegerLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Scenario__Alternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getModelImportsAssignment_3_0_0()); }
(rule__Scenario__ModelImportsAssignment_3_0_0)
{ after(grammarAccess.getScenarioAccess().getModelImportsAssignment_3_0_0()); }
)

    |(
{ before(grammarAccess.getScenarioAccess().getClassImportsAssignment_3_0_1()); }
(rule__Scenario__ClassImportsAssignment_3_0_1)
{ after(grammarAccess.getScenarioAccess().getClassImportsAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getModelImportsAssignment_3_1_0()); }
(rule__Scenario__ModelImportsAssignment_3_1_0)
{ after(grammarAccess.getScenarioAccess().getModelImportsAssignment_3_1_0()); }
)

    |(
{ before(grammarAccess.getScenarioAccess().getClassImportsAssignment_3_1_1()); }
(rule__Scenario__ClassImportsAssignment_3_1_1)
{ after(grammarAccess.getScenarioAccess().getClassImportsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getAliasAssignment_2_0()); }
(rule__ImportStatement__AliasAssignment_2_0)
{ after(grammarAccess.getImportStatementAccess().getAliasAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getImportStatementAccess().getGroup_2_1()); }
(rule__ImportStatement__Group_2_1__0)
{ after(grammarAccess.getImportStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportJavaStatement__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportJavaStatementAccess().getGroup_0_0()); }
(rule__ImportJavaStatement__Group_0_0__0)
{ after(grammarAccess.getImportJavaStatementAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getImportJavaStatementAccess().getGroup_0_1()); }
(rule__ImportJavaStatement__Group_0_1__0)
{ after(grammarAccess.getImportJavaStatementAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getMseStatementParserRuleCall_0()); }
	ruleMseStatement
{ after(grammarAccess.getStatementAccess().getMseStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getRewritingRuleCallStatementParserRuleCall_1()); }
	ruleRewritingRuleCallStatement
{ after(grammarAccess.getStatementAccess().getRewritingRuleCallStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getIntegerLiteralParserRuleCall_0()); }
	ruleIntegerLiteral
{ after(grammarAccess.getVariableAccess().getIntegerLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getStringLiteralParserRuleCall_1()); }
	ruleStringLiteral
{ after(grammarAccess.getVariableAccess().getStringLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getEObjectRefParserRuleCall_2()); }
	ruleEObjectRef
{ after(grammarAccess.getVariableAccess().getEObjectRefParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Scenario__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__0__Impl
	rule__Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getScenarioAction_0()); }
(

)
{ after(grammarAccess.getScenarioAccess().getScenarioAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__1__Impl
	rule__Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getScenarioKeyword_1()); }

	'Scenario' 

{ after(grammarAccess.getScenarioAccess().getScenarioKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__2__Impl
	rule__Scenario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getNameAssignment_2()); }
(rule__Scenario__NameAssignment_2)?
{ after(grammarAccess.getScenarioAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__3__Impl
	rule__Scenario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getGroup_3()); }
(rule__Scenario__Group_3__0)?
{ after(grammarAccess.getScenarioAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__4__Impl
	rule__Scenario__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getGroup_4()); }
(rule__Scenario__Group_4__0)?
{ after(grammarAccess.getScenarioAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getScenarioAccess().getStatementSequenceAssignment_5()); }
(rule__Scenario__StatementSequenceAssignment_5)
{ after(grammarAccess.getScenarioAccess().getStatementSequenceAssignment_5()); }
)
(
{ before(grammarAccess.getScenarioAccess().getStatementSequenceAssignment_5()); }
(rule__Scenario__StatementSequenceAssignment_5)*
{ after(grammarAccess.getScenarioAccess().getStatementSequenceAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Scenario__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_3__0__Impl
	rule__Scenario__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getAlternatives_3_0()); }
(rule__Scenario__Alternatives_3_0)
{ after(grammarAccess.getScenarioAccess().getAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getAlternatives_3_1()); }
(rule__Scenario__Alternatives_3_1)*
{ after(grammarAccess.getScenarioAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Scenario__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_4__0__Impl
	rule__Scenario__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getVariablesAssignment_4_0()); }
(rule__Scenario__VariablesAssignment_4_0)
{ after(grammarAccess.getScenarioAccess().getVariablesAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getVariablesAssignment_4_1()); }
(rule__Scenario__VariablesAssignment_4_1)*
{ after(grammarAccess.getScenarioAccess().getVariablesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__0__Impl
	rule__ImportStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportModelKeyword_0()); }

	'importModel' 

{ after(grammarAccess.getImportStatementAccess().getImportModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__1__Impl
	rule__ImportStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportURIAssignment_1()); }
(rule__ImportStatement__ImportURIAssignment_1)
{ after(grammarAccess.getImportStatementAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getAlternatives_2()); }
(rule__ImportStatement__Alternatives_2)
{ after(grammarAccess.getImportStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group_2_1__0__Impl
	rule__ImportStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getAsKeyword_2_1_0()); }

	'as' 

{ after(grammarAccess.getImportStatementAccess().getAsKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group_2_1__1__Impl
	rule__ImportStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getAliasAssignment_2_1_1()); }
(rule__ImportStatement__AliasAssignment_2_1_1)
{ after(grammarAccess.getImportStatementAccess().getAliasAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getSemicolonKeyword_2_1_2()); }

	';' 

{ after(grammarAccess.getImportStatementAccess().getSemicolonKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportJavaStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportJavaStatement__Group__0__Impl
	rule__ImportJavaStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportJavaStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportJavaStatementAccess().getAlternatives_0()); }
(rule__ImportJavaStatement__Alternatives_0)
{ after(grammarAccess.getImportJavaStatementAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportJavaStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportJavaStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportJavaStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportJavaStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getImportJavaStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportJavaStatement__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportJavaStatement__Group_0_0__0__Impl
	rule__ImportJavaStatement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportJavaStatement__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportJavaStatementAccess().getImportClassKeyword_0_0_0()); }

	'importClass' 

{ after(grammarAccess.getImportJavaStatementAccess().getImportClassKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportJavaStatement__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportJavaStatement__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportJavaStatement__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportJavaStatementAccess().getImportedNamespaceAssignment_0_0_1()); }
(rule__ImportJavaStatement__ImportedNamespaceAssignment_0_0_1)
{ after(grammarAccess.getImportJavaStatementAccess().getImportedNamespaceAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportJavaStatement__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportJavaStatement__Group_0_1__0__Impl
	rule__ImportJavaStatement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportJavaStatement__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportJavaStatementAccess().getImportPackageKeyword_0_1_0()); }

	'importPackage' 

{ after(grammarAccess.getImportJavaStatementAccess().getImportPackageKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportJavaStatement__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportJavaStatement__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportJavaStatement__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportJavaStatementAccess().getImportedNamespaceAssignment_0_1_1()); }
(rule__ImportJavaStatement__ImportedNamespaceAssignment_0_1_1)
{ after(grammarAccess.getImportJavaStatementAccess().getImportedNamespaceAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectVariable__Group__0__Impl
	rule__ObjectVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectVariableAccess().getVariableKeyword_0()); }

	'Variable' 

{ after(grammarAccess.getObjectVariableAccess().getVariableKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectVariable__Group__1__Impl
	rule__ObjectVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectVariableAccess().getNameAssignment_1()); }
(rule__ObjectVariable__NameAssignment_1)
{ after(grammarAccess.getObjectVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectVariable__Group__2__Impl
	rule__ObjectVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectVariableAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getObjectVariableAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectVariable__Group__3__Impl
	rule__ObjectVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectVariableAccess().getTypeAssignment_3()); }
(rule__ObjectVariable__TypeAssignment_3)
{ after(grammarAccess.getObjectVariableAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectVariableAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getObjectVariableAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__QualifiedNameWithWildCard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__0__Impl
	rule__QualifiedNameWithWildCard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__1__Impl
	rule__QualifiedNameWithWildCard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_2()); }

	'*' 

{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group__0__Impl
	rule__JvmTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmAnyTypeReferenceAction_0()); }
(

)
{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmAnyTypeReferenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getTypeAssignment_1()); }
(rule__JvmTypeReference__TypeAssignment_1)
{ after(grammarAccess.getJvmTypeReferenceAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MseStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MseStatement__Group__0__Impl
	rule__MseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MseStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMseStatementAccess().getExpectKeyword_0()); }

	'expect' 

{ after(grammarAccess.getMseStatementAccess().getExpectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MseStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MseStatement__Group__1__Impl
	rule__MseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MseStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMseStatementAccess().getMseStatementAction_1()); }
(

)
{ after(grammarAccess.getMseStatementAccess().getMseStatementAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MseStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MseStatement__Group__2__Impl
	rule__MseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MseStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMseStatementAccess().getClocksAssignment_2()); }
(rule__MseStatement__ClocksAssignment_2)
{ after(grammarAccess.getMseStatementAccess().getClocksAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MseStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MseStatement__Group__3__Impl
	rule__MseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MseStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMseStatementAccess().getGroup_3()); }
(rule__MseStatement__Group_3__0)*
{ after(grammarAccess.getMseStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MseStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MseStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MseStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMseStatementAccess().getSemicolonKeyword_4()); }
(
	';' 
)?
{ after(grammarAccess.getMseStatementAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MseStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MseStatement__Group_3__0__Impl
	rule__MseStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MseStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMseStatementAccess().getAndKeyword_3_0()); }

	'and' 

{ after(grammarAccess.getMseStatementAccess().getAndKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MseStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MseStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MseStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMseStatementAccess().getClocksAssignment_3_1()); }
(rule__MseStatement__ClocksAssignment_3_1)
{ after(grammarAccess.getMseStatementAccess().getClocksAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RewritingRuleCallStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group__0__Impl
	rule__RewritingRuleCallStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getExecuteKeyword_0()); }

	'execute' 

{ after(grammarAccess.getRewritingRuleCallStatementAccess().getExecuteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewritingRuleCallStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group__1__Impl
	rule__RewritingRuleCallStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getRewritingRuleCallStatementAction_1()); }
(

)
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getRewritingRuleCallStatementAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewritingRuleCallStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group__2__Impl
	rule__RewritingRuleCallStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getGroup_2()); }
(rule__RewritingRuleCallStatement__Group_2__0)
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewritingRuleCallStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getSemicolonKeyword_3()); }
(
	';' 
)?
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RewritingRuleCallStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2__0__Impl
	rule__RewritingRuleCallStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getObjectVariableAssignment_2_0()); }
(rule__RewritingRuleCallStatement__ObjectVariableAssignment_2_0)
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getObjectVariableAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewritingRuleCallStatement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2__1__Impl
	rule__RewritingRuleCallStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getFullStopKeyword_2_1()); }

	'.' 

{ after(grammarAccess.getRewritingRuleCallStatementAccess().getFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewritingRuleCallStatement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2__2__Impl
	rule__RewritingRuleCallStatement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getMethodAssignment_2_2()); }
(rule__RewritingRuleCallStatement__MethodAssignment_2_2)
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getMethodAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewritingRuleCallStatement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getGroup_2_3()); }
(rule__RewritingRuleCallStatement__Group_2_3__0)?
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RewritingRuleCallStatement__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2_3__0__Impl
	rule__RewritingRuleCallStatement__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getLeftParenthesisKeyword_2_3_0()); }

	'(' 

{ after(grammarAccess.getRewritingRuleCallStatementAccess().getLeftParenthesisKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewritingRuleCallStatement__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2_3__1__Impl
	rule__RewritingRuleCallStatement__Group_2_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getGroup_2_3_1()); }
(rule__RewritingRuleCallStatement__Group_2_3_1__0)*
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getGroup_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewritingRuleCallStatement__Group_2_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getRightParenthesisKeyword_2_3_2()); }

	')' 

{ after(grammarAccess.getRewritingRuleCallStatementAccess().getRightParenthesisKeyword_2_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RewritingRuleCallStatement__Group_2_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2_3_1__0__Impl
	rule__RewritingRuleCallStatement__Group_2_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getParametersAssignment_2_3_1_0()); }
(rule__RewritingRuleCallStatement__ParametersAssignment_2_3_1_0)
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getParametersAssignment_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewritingRuleCallStatement__Group_2_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getGroup_2_3_1_1()); }
(rule__RewritingRuleCallStatement__Group_2_3_1_1__0)*
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getGroup_2_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RewritingRuleCallStatement__Group_2_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2_3_1_1__0__Impl
	rule__RewritingRuleCallStatement__Group_2_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getCommaKeyword_2_3_1_1_0()); }

	',' 

{ after(grammarAccess.getRewritingRuleCallStatementAccess().getCommaKeyword_2_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewritingRuleCallStatement__Group_2_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewritingRuleCallStatement__Group_2_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__Group_2_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getParametersAssignment_2_3_1_1_1()); }
(rule__RewritingRuleCallStatement__ParametersAssignment_2_3_1_1_1)
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getParametersAssignment_2_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Scenario__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getScenarioAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ModelImportsAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getModelImportsImportStatementParserRuleCall_3_0_0_0()); }
	ruleImportStatement{ after(grammarAccess.getScenarioAccess().getModelImportsImportStatementParserRuleCall_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ClassImportsAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getClassImportsImportJavaStatementParserRuleCall_3_0_1_0()); }
	ruleImportJavaStatement{ after(grammarAccess.getScenarioAccess().getClassImportsImportJavaStatementParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ModelImportsAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getModelImportsImportStatementParserRuleCall_3_1_0_0()); }
	ruleImportStatement{ after(grammarAccess.getScenarioAccess().getModelImportsImportStatementParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ClassImportsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getClassImportsImportJavaStatementParserRuleCall_3_1_1_0()); }
	ruleImportJavaStatement{ after(grammarAccess.getScenarioAccess().getClassImportsImportJavaStatementParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__VariablesAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getVariablesObjectVariableParserRuleCall_4_0_0()); }
	ruleObjectVariable{ after(grammarAccess.getScenarioAccess().getVariablesObjectVariableParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__VariablesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getVariablesObjectVariableParserRuleCall_4_1_0()); }
	ruleObjectVariable{ after(grammarAccess.getScenarioAccess().getVariablesObjectVariableParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__StatementSequenceAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getStatementSequenceStatementParserRuleCall_5_0()); }
	ruleStatement{ after(grammarAccess.getScenarioAccess().getStatementSequenceStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportURIEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getImportStatementAccess().getImportURIEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__AliasAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getAliasSemicolonKeyword_2_0_0()); }
(
{ before(grammarAccess.getImportStatementAccess().getAliasSemicolonKeyword_2_0_0()); }

	';' 

{ after(grammarAccess.getImportStatementAccess().getAliasSemicolonKeyword_2_0_0()); }
)

{ after(grammarAccess.getImportStatementAccess().getAliasSemicolonKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__AliasAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getAliasEStringParserRuleCall_2_1_1_0()); }
	ruleEString{ after(grammarAccess.getImportStatementAccess().getAliasEStringParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportJavaStatement__ImportedNamespaceAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportJavaStatementAccess().getImportedNamespaceQualifiedNameParserRuleCall_0_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getImportJavaStatementAccess().getImportedNamespaceQualifiedNameParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportJavaStatement__ImportedNamespaceAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportJavaStatementAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_0_1_1_0()); }
	ruleQualifiedNameWithWildCard{ after(grammarAccess.getImportJavaStatementAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectVariable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectVariableAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getObjectVariableAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectVariable__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectVariableAccess().getTypeJvmTypeReferenceParserRuleCall_3_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getObjectVariableAccess().getTypeJvmTypeReferenceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getTypeJvmTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getJvmTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getJvmTypeReferenceAccess().getTypeJvmTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MseStatement__ClocksAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMseStatementAccess().getClocksClockCrossReference_2_0()); }
(
{ before(grammarAccess.getMseStatementAccess().getClocksClockIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMseStatementAccess().getClocksClockIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getMseStatementAccess().getClocksClockCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MseStatement__ClocksAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMseStatementAccess().getClocksClockCrossReference_3_1_0()); }
(
{ before(grammarAccess.getMseStatementAccess().getClocksClockIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMseStatementAccess().getClocksClockIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getMseStatementAccess().getClocksClockCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__ObjectVariableAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getObjectVariableObjectVariableCrossReference_2_0_0()); }
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getObjectVariableObjectVariableIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRewritingRuleCallStatementAccess().getObjectVariableObjectVariableIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getObjectVariableObjectVariableCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__MethodAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getMethodJvmOperationCrossReference_2_2_0()); }
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getMethodJvmOperationIDTerminalRuleCall_2_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRewritingRuleCallStatementAccess().getMethodJvmOperationIDTerminalRuleCall_2_2_0_1()); }
)
{ after(grammarAccess.getRewritingRuleCallStatementAccess().getMethodJvmOperationCrossReference_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__ParametersAssignment_2_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getParametersVariableParserRuleCall_2_3_1_0_0()); }
	ruleVariable{ after(grammarAccess.getRewritingRuleCallStatementAccess().getParametersVariableParserRuleCall_2_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RewritingRuleCallStatement__ParametersAssignment_2_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewritingRuleCallStatementAccess().getParametersVariableParserRuleCall_2_3_1_1_1_0()); }
	ruleVariable{ after(grammarAccess.getRewritingRuleCallStatementAccess().getParametersVariableParserRuleCall_2_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EObjectRef__ObjectAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEObjectRefAccess().getObjectEObjectCrossReference_0()); }
(
{ before(grammarAccess.getEObjectRefAccess().getObjectEObjectQualifiedNameParserRuleCall_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEObjectRefAccess().getObjectEObjectQualifiedNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getEObjectRefAccess().getObjectEObjectCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


